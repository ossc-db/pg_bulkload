name: Build_with_ubuntu_packages

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 20
    strategy:
      matrix:
        PGVERSION:                # TODO: build with master branch
          - "16"
          - "15"
          - "14"
          - "13"
          - "12"
          - "11"

    env:
      CACHE_VERSION: 20221222  # to identify cache version

    steps:
    - name: cat version
      shell: bash -xe {0}
      run: |
         cat /etc/os-release
         uname -a

    - name: get current branch name
      shell: bash -xe {0}
      run: |
        if [ ${{ github.event_name }} = "pull_request" ]; then
          echo "BRANCH=${{ github.base_ref }}" >>  $GITHUB_ENV
        else # push
          echo "BRANCH=${GITHUB_REF##*/}" >>  $GITHUB_ENV
        fi

    - name: set build postgresql version
      shell: bash -xe {0}
      run: |
        echo "PGVERSION=${{ matrix.PGVERSION }}" >> $GITHUB_ENV

    - name: remove pre-installed postgresql packages
      shell: bash -xe {0}
      run: sudo apt-get remove postgresql*

    - name: download packages for building
      shell: bash -xe {0}
      run: |
        # https://www.postgresql.org/download/linux/ubuntu/
        sudo sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list'
        wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
        sudo apt-get update
        sudo apt-get -y install           \
          build-essential                 \
          libpam-dev                      \
          libkrb5-dev                     \
          libssl-dev                      \
          libreadline-dev                 \
          libselinux-dev                  \
          libedit-dev                     \
          liblz4-dev                      \
          zlib1g-dev                      \
          postgresql-${{ env.PGVERSION }} \
          postgresql-server-dev-${{ env.PGVERSION }}

    - uses: actions/checkout@v2

    - name: make  # only check if build is success. The tests are skipped because another workflow does so.
      shell: bash -xe {0}
      run: |
        LOGFILE=~/make.log
        make 2>&1 | tee $LOGFILE

    - name: show build warning
      shell: bash -xe {0}
      run: |
        LOGFILE=~/make.log
        grep -C 1 warning $LOGFILE || exit 0       # ok if warning doesn't exists (= status code is 1)

    - name: check version
      shell: bash -xe {0}
      run: bin/pg_bulkload --version
